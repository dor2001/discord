<!DOCTYPE html>
<html lang="he" dir="rtl">
<head><meta charset="UTF-8"/><meta name="viewport" content="width=device-width, initial-scale=1.0"/><title>מוזיקה • לוח בקרה</title><script src="https://cdn.tailwindcss.com"></script><script src="/socket.io/socket.io.js"></script><script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.2/Sortable.min.js"></script></head>
<body class="bg-neutral-900 text-white min-h-screen">
  <div class="flex">
    <aside class="w-64 bg-black/60 p-4 space-y-4 min-h-screen hidden md:block">
      <div class="font-bold text-xl">🎧 Music Panel</div>
      <nav class="space-y-2">
        <a href="/" class="block px-3 py-2 rounded hover:bg-white/10 bg-white/10">לוח בקרה</a>
        <a href="/settings" class="block px-3 py-2 rounded hover:bg-white/10">הגדרות</a>
        <a href="/logout" class="block px-3 py-2 rounded hover:bg-white/10">התנתק</a>
      </nav>
    </aside>
    <main class="flex-1 p-6 space-y-6">
      <section class="rounded-2xl bg-gradient-to-b from-green-600/20 to-neutral-800 p-4">
        <div class="flex flex-col md:flex-row md:items-center gap-4">
          <div class="w-28 h-28 bg-neutral-800 rounded overflow-hidden shrink-0"><img id="nowThumb" class="w-full h-full object-cover" alt="thumb"/></div>
          <div class="flex-1">
            <div id="nowTitle" class="font-bold text-2xl line-clamp-2">—</div>
            <div id="status" class="text-sm text-neutral-300 mt-1">סטטוס: —</div>
            <div class="flex items-center gap-2 mt-3 flex-wrap">
              <button id="join" class="px-3 py-2 rounded bg-green-500 text-black font-semibold">הצטרף לערוץ</button>
              <button id="pause" class="px-3 py-2 rounded bg-neutral-700">השהה</button>
              <button id="resume" class="px-3 py-2 rounded bg-neutral-700">המשך</button>
              <button id="skip" class="px-3 py-2 rounded bg-neutral-700">דלג</button>
              <button id="stop" class="px-3 py-2 rounded bg-red-600">עצור</button>
              <label class="ml-4 text-sm text-neutral-300">ווליום</label>
              <input id="vol" type="range" min="0" max="200" value="100"/>
              <select id="repeat" class="bg-neutral-800 border border-neutral-700 rounded px-2 py-1 text-sm"><option value="off">ללא חזרה</option><option value="one">חזור על שיר</option><option value="all">חזור על הכל</option></select>
            </div>
          </div>
          <div class="md:w-80 w-full">
            <h2 class="font-semibold mb-2">פלייליסטים</h2>
            <div class="flex gap-2 mb-2"><input id="plName" class="flex-1 bg-neutral-800 border border-neutral-700 rounded px-2 py-1" placeholder="שם פלייליסט"/><button id="plCreate" class="px-3 py-1 rounded bg-green-500 text-black font-semibold">צור</button></div>
            <div class="flex gap-2 mb-2"><input id="plImportUrl" class="flex-1 bg-neutral-800 border border-neutral-700 rounded px-2 py-1" placeholder="YouTube Playlist URL"/><input id="plImportName" class="w-36 bg-neutral-800 border border-neutral-700 rounded px-2 py-1" placeholder="לשם"/><button id="plImport" class="px-3 py-1 rounded bg-neutral-700">ייבא</button></div>
            <ul id="plList" class="space-y-2 max-h-44 overflow-auto"></ul>
          </div>
        </div>
        <div class="mt-6"><div class="flex items-center justify-between"><h2 class="font-semibold">תור נוכחי</h2><span class="text-sm text-neutral-400">גרור לשינוי סדר, לחץ 🗑️ למחיקה</span></div><ol id="queue" class="mt-3 divide-y rounded-xl border border-neutral-800 bg-neutral-900"></ol></div>
      </section>

      <section class="rounded-2xl bg-neutral-800 p-4"><div class="flex items-center justify-between"><h2 class="font-semibold">המלצות בשבילי</h2><button id="btnReco" class="px-3 py-1 rounded bg-neutral-700">רענן</button></div><div id="reco" class="grid md:grid-cols-2 lg:grid-cols-4 gap-4 mt-4"></div></section>

      <section class="rounded-2xl bg-neutral-800 p-4">
        <div class="flex flex-col md:flex-row md:items-end gap-3">
          <div class="flex-1"><label class="block text-sm mb-1 text-neutral-300">חיפוש ביוטיוב</label><input id="q" class="w-full bg-neutral-900 border border-neutral-700 rounded px-3 py-2" placeholder="שם שיר או קישור YouTube"/></div>
          <button id="btnSearch" class="px-4 py-2 rounded bg-green-500 text-black font-semibold">חפש</button>
        </div>
        <div id="results" class="grid md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4"></div>
      </section>
    </main>
  </div>
  <script>
    const socket = io(); const el = id => document.getElementById(id);
    function toast(msg){ const d=document.createElement('div'); d.textContent=msg; d.className="fixed bottom-4 right-4 bg-black text-white px-3 py-2 rounded"; document.body.appendChild(d); setTimeout(()=>d.remove(),2500); }
    socket.on('toast', toast);
    function renderState(state){ el('status').textContent = 'סטטוס: ' + (state?.status || 'Unknown'); el('repeat').value = state?.repeat || 'off';
      if (state?.current){ el('nowTitle').textContent = state.current.title; el('nowThumb').src = state.current.thumbnail || ''; } else { el('nowTitle').textContent = '—'; el('nowThumb').src = ''; }
      renderQueue(state?.queue||[]); el('vol').value = Math.round((state?.volume||1)*100); }
    function renderQueue(items){ const list = el('queue'); list.innerHTML=''; items.forEach((t,i)=>{ const li = document.createElement('li'); li.dataset.id = t.id; li.className = "flex items-center gap-3 p-2 hover:bg:white/5";
        li.innerHTML = `<img src="${t.thumbnail||''}" class="w-12 h-12 rounded object-cover"/><div class="flex-1 min-w-0"><div class="font-medium truncate">${t.title}</div><div class="text-xs text-neutral-400">#${i+1}</div></div><button class="text-red-400 hover:text-red-300">🗑️</button>`;
        li.querySelector('button').onclick = () => socket.emit('queue:remove', i); list.appendChild(li); });
      new Sortable(list, { animation: 150, onEnd: () => { const ids = Array.from(list.children).map(li => li.dataset.id); socket.emit('queue:reorder', ids); }}); }
    function renderPlaylists(items){ const wrap = el('plList'); wrap.innerHTML=''; items.forEach(name=>{ const li = document.createElement('li'); li.className = "flex items-center justify-between bg-neutral-900 rounded px-3 py-2 border border-neutral-800";
        li.innerHTML = `<span class="truncate">${name}</span><div class="flex gap-2"><button class="px-2 py-1 text-sm rounded bg-green-500 text-black">טען</button><button class="px-2 py-1 text-sm rounded bg-red-600">מחק</button></div>`;
        li.querySelectorAll('button')[0].onclick = ()=> socket.emit('playlist:load', name); li.querySelectorAll('button')[1].onclick = ()=> socket.emit('playlist:delete', name); wrap.appendChild(li); }); }
    function renderCards(containerId, items){ const wrap = el(containerId); wrap.innerHTML=''; items.forEach(it=>{ const card = document.createElement('div'); card.className = "rounded-xl overflow-hidden border border-neutral-800 bg-neutral-900";
        card.innerHTML = `<img src="${it.thumbnail||''}" class="w-full aspect-video object-cover"/><div class="p-3"><div class="font-semibold text-sm line-clamp-2">${it.title}</div><div class="flex gap-2 mt-2"><button class="px-3 py-1 rounded bg-green-500 text-black font-semibold">הוסף לתור</button><select class="bg-neutral-800 border border-neutral-700 rounded px-2 py-1 text-sm"><option value="">לפייליסט…</option></select></div></div>`;
        const addBtn = card.querySelector('button'); const select = card.querySelector('select'); socket.once('playlists', (names)=>{ select.innerHTML = '<option value="">לפייליסט…</option>'; names.forEach(n=>{ const opt=document.createElement('option'); opt.value=n; opt.textContent=n; select.appendChild(opt); }); });
        addBtn.onclick = ()=> socket.emit('enqueue', it); select.onchange = ()=> { if (select.value) socket.emit('playlist:addTrack', { name: select.value, track: it }); }; wrap.appendChild(card); }); }
    socket.on('state', renderState); socket.on('playlists', renderPlaylists); socket.on('recommendations', items => renderCards('reco', items));
    el('btnSearch').onclick = ()=> socket.emit('search', el('q').value); el('btnReco').onclick = ()=> socket.emit('recommend:get'); el('join').onclick = ()=> socket.emit('join');
    ['pause','resume','skip','stop'].forEach(id=> el(id).onclick = ()=> socket.emit(id));
    el('vol').oninput = ()=> socket.emit('volume', Number(el('vol').value)/100); el('repeat').onchange = ()=> socket.emit('repeat', el('repeat').value);
    el('plCreate').onclick = ()=> { const name = el('plName').value.trim(); if (!name) return; socket.emit('playlist:create', name); el('plName').value=''; };
    el('plImport').onclick = ()=> { const url = el('plImportUrl').value.trim(); const name = el('plImportName').value.trim()||'מייובא'; if (!url) return; socket.emit('playlist:import', { url, name }); };
    socket.on('searchResults', items => renderCards('results', items)); setInterval(()=> socket.emit('getState'), 3000);
  </script>
</body></html>
